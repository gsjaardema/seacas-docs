.NOAUTOPARAGRAPH
.PARAGRAPH 0,0
.NO AUTOJUSTIFY .NO JUSTIFY
.LEFT MARGIN 0 .RIGHT MARGIN 72
.NO PAGING
.SET DATE .FLAGS SUBSTITUTE
.P; !
.P; 3 TRANSLATE 
.P; !
.LM +5 .P -5,0
TRANSLATE
{ntran} <1>,
{tottran} <1.0>,
{grad} <1.0>
.S .LM -5 .P 0,0
TRANSLATE causes the 2D mesh to be translated to create the
3D mesh. The number of levels is {ntran}, which is also the
number of 3D elements derived from each input 2D element.
The total range of the Z coordinate is {tottran} with a
gradient of {grad}. This command negates a ROTATE command.
.S .P
The gradient affects the spacing of the levels. The Z range of
level {i} is
.P; !
.P; 3 ROTATE    
.P; !
.LM +5 .P -5,0
ROTATE
{nrot} <1>,
{totdeg} <360.0>,
{cenrot} <0.0>
.S .LM -5 .P 0,0
ROTATE causes the 2D mesh to be rotated to create the
3D mesh. The number of rotation levels is {nrot}, which is
also the number of 3D elements derived from each input 2D
element (with the exception of those affected by the CENTER
command). The mesh is rotated a total of {totdeg} degrees, with
each level rotated {totdeg}/{nrot} degrees. The center of
rotation {cenrot} is only meaningful if no center element blocks
are defined (see the CENTER command).
.P; !
.P; 3 REVOLVE   
.P; !
.LM +5 .P -5,0
REVOLVE
{axis__{1}}, {ndeg__{1}},
{axis__{2}}, {ndeg__{2}}, _._._.
<last selection> 
.P
REVOLVE
RESET <initial condition>
.S .LM -5 .P 0,0
REVOLVE causes the transformed 3D mesh to be rotated. Each
({axis}, {ndeg}) parameter pair specifies an axis
(X or Y or Z) and the number of degrees to rotate. The
axis refers to the "viewing" axis, not to the object axis. The
rotations are according to right-hand rule. The center of the rotation
is specified by the REVCEN command.
.S .P
Rotations are cumulative. The REVOLVE RESET command resets to no
rotation.
.P; !
.P; 3 REVCEN    
.P; !
.LM +5 .P -5,0
REVCEN
{xcen} <2D minimum X coordinate>,
{ycen} <2D minimum Y coordinate>,
{zcen} <0.0>
.S .LM -5 .P 0,0
REVCEN sets the center of rotation for the REVOLVE command
to the point ({xcen},{ycen},{zcen}).
.P; !
.P; 3 OFFSET    
.P; !
.LM +5 .P -5,0
OFFSET
{xoff} <0.0>,
{yoff} <0.0>,
{zoff} <0.0>
.S .LM -5 .P 0,0
OFFSET specifies offsets to be added to the transformed 3D
coordinates. If a REVOLVE command has been issued, the 3D
mesh is rotated before it is offset.
.P; !
.P; 3 BLOCK     
.P; !
.LM +5 .P -5,0
BLOCK
{block__id__{1}}, {block__id__{2}}, _._._. 
<all element blocks>
.S .LM -5 .P 0,0
BLOCK defines the specified element blocks 
as normal blocks. This command
negates the effect of a TUNNEL or CENTER command.
.P; !
.P; 3 TUNNEL    
.P; !
.LM +5 .P -5,0
TUNNEL
{block__id} <no default>,
{start} <1>,
{end} <number of levels>,
{inc} <1>
.S .LM -5 .P 0,0
TUNNEL defines the specified element block as a
tunnel block. A TRANSLATE command must be in effect before this
command is issued. If a ROTATE command is issued, all tunnel
blocks are changed to normal blocks.
.S .P
For each tunnel block, a separate 3D element block is created
starting at level {start}, with each block having {inc}
levels. Any levels after level {end} are put in a single block.
.S .P
For example, the commands
.LM +8 .S .P
TRANSLATE 15, 15.0 
.BR
TUNNEL 999, 5, 9, 2
.LM -8 .S .P
create five blocks consisting of the following 3D elements
(derived from the 2D elements of element block {block__id}):
.LM +8 .S .P
1) the elements in levels 1, 2, 3, and 4, 
.BR
2) the elements in levels 5 and 6, 
.BR
3) the elements in levels 7 and 8, 
.BR
4) the elements in level 9, 
.BR
5) the elements in levels 10, 11, 12, 13, 14, and 15.
.LM -8 .S .P
.S .P
The block identifier of the first block is always {block__id}. The new
blocks are assigned consecutive identifiers greater than the maximum
existing (and new) identifier.
.P; !
.P; 3 CENTER    
.P; !
.LM +5 .P -5,0
CENTER
{block__id__{1}}, {block__id__{2}}, _._._. 
<all element blocks>
.S .LM -5 .P 0,0
CENTER defines the specified element blocks 
as center blocks. A
ROTATE command must be in effect before this command is issued.
The mesh must be rotated a complete quadrant (90, 180, 270 or 360
degrees) and the number of rotation levels must be a multiple of 2 for
each 90 degrees of rotation. If a TRANSLATE command is issued, all
center blocks are changed to normal blocks.
.S .P
If center blocks are defined, the center of rotation defined by the
ROTATE command is ignored. The center of rotation is the minimum
coordinate of all elements in the center blocks.
.P; !
.P; 3 NSETS     
.P; !
.LM +5 .P -5,0
NSETS
FRONT or BACK <no default>,
{set__id__{1}}, {set__id__{2}}, _._._. <no default>
.S .LM -5 .P 0,0
NSETS defines front or back node sets with the given
identifiers. The identifiers must be unique from existing node 
set identifiers and defined front and back node set identifiers.
.S .P
Back sets cannot be defined on a 360-degree rotation.
.P; !
.P; 3 SSETS     
.P; !
.LM +5 .P -5,0
SSETS
FRONT or BACK <no default>,
{set__id__{1}}, {set__id__{2}}, _._._. <no default>
.S .LM -5 .P 0,0
SSETS is equivalent to a NSETS command except that it
defines side sets.
.P; !
.P; 3 SHOW      
.P; !
.LM +5 .P -5,0
SHOW
{command} <no parameter>
.S .LM -5 .P 0,0
SHOW displays the settings of parameters relevant to the
{command}. For example, the command SHOW BLOCK displays
information about all the element blocks.
.P; !
.P; 3 LIST      
.P; !
.LM +5 .P -5,0
LIST VARS
.S .LM -5 .P 0,0
LIST VARS displays a summary of the input database. The summary
includes the database title; the number of nodes, elements, and
element blocks; and the number of node sets and side sets.
.P; !
.P; 3 HELP      
.P; !
.LM +5 .P -5,0
HELP
{command} <no parameter>
.S .LM -5 .P 0,0
HELP displays information about the program command given as the
parameter. If no parameter is given, all the command verbs are
displayed. This command is system-dependent and may not be available on
some systems.
.P; !
.P; 3 END       
.P; !
.LM +5 .P -5,0
END
.S .LM -5 .P 0,0
END ends the command input and starts the database transformation.
.P; !
.P; 3 QUIT      
.P; !
.LM +5 .P -5,0
QUIT
.S .LM -5 .P 0,0
QUIT ends the command input and exits the program immediately
without writing an output database.
