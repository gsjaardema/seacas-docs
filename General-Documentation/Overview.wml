#---------------------------------------------------------------------
#
# WebMaker Version Beta 1.4 Copyright (C) 1994, CERN Geneva
#
# Default configuration file generated by wmconfig on 95/02/24
# for the FrameMaker document `SEACAS_Overview.06_94.mif'.
#
# If used as is to translate `SEACAS_Overview.06_94.mif', the entire document
# is translated into a single node and every paragraph to a
# simple paragraph. Please edit to suit.
#
#---------------------------------------------------------------------
PARAGRAPH "FMDocumentTitle" TYPE Normal
{
  ACTIONS
  {
    write(*,heading(1,text())); 
    write(*,hrule());
  }
}

PARAGRAPH "Ignore" TYPE Normal
{
  ACTIONS
  {
    write(*,comment(concatenate("FM pgf ignored")));
  }
}

PARAGRAPH "QuotedText" TYPE Normal
{
  CONTEXT Quote
  ACTIONS
  {
    write(*,paragraph(text()));
  }
}

#---------------------------------------------------------------------
#
# This file contains no WML node rules; the default value for
# 'FirstPage' is used. To use one of the two node rule packages
# defined in the two WML library files,
#
#       include/nodes-012.wml
#       include/nodes-012TI.wml
#
# copy the contents of one of these files here. Then assign a paragraph
# rule from the file 'headings.wml' to the heading paragraphs which are
# to trigger a new node.
#-----------------------------------------------------------------------
# WebMaker, a FrameMaker to WWW converter
# 
# Copyright (C) 1994, CERN Geneva
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
#
# Contains definition of:
#     
#          VARIABLE       @NavPanel
#          NODE           FirstPage
#          NODE           LevelOne
#          NODE           LevelTwo


#-----------------------------------------------------------------------
#
# Define variables.
#
VARIABLE @NavPanel


#-----------------------------------------------------------------------
#
# Define the entry page of the generated web.
#
NODE FirstPage
{
  TITLE maintitle()
  HEADER
  {
    @NavPanel=concatenate(
              button("[Next] ",filename(next),"[Next] ")
                         );
    write(*,paragraph(@NavPanel));
  }
  FOOTER
  {
    write(*,toc(1,local));
    write(*,hrule());
    write(*,address(concatenate(maintitle()," - ",date())));
    write(*,paragraph(@NavPanel));
  }
}


#-----------------------------------------------------------------------
#
# Define other lower level nodes
#
NODE LevelOne
{
  TITLE concatenate(headingnumber()," ",headingtext())
  HEADER
  {
    @NavPanel=concatenate( 
              button("[Next] ",    filename(next),    "[Next] "    ),
              button("[Previous] ",filename(previous),"[Previous] "),
              button("[Top] ",     filename(top),     "[Top] "     )
                         );
    write(*,paragraph(@NavPanel));
    write(*,paragraph(maintitle()));
  }
  FOOTER
  {
    write(*,toc(1,local));
    write(*,hrule());
    write(*,address(concatenate(maintitle()," - ",date())));
    write(*,paragraph(@NavPanel));
  }
}

NODE LevelTwo
{
  TITLE concatenate(headingnumber()," ",headingtext())
  HEADER
  {
    @NavPanel=concatenate( 
              button("[Next] ",    filename(next),    "[Next] "     ),
              button("[Previous] ",filename(previous),"[Previous] " ),
              button("[Up] ",      filename(up),      "[up] "       ),
              button("[Top] ",     filename(top),     "[Top] "      )
                         );
    write(*,paragraph(@NavPanel));
    write(*,paragraph(concatenate(headingnumber(up)," ",headingtext(up))));
  }
  FOOTER
  {
    write(*,toc(1,local));
    write(*,hrule());
    write(*,address(concatenate(maintitle()," - ",date())));
    write(*,paragraph(@NavPanel));
  }
}

#-----------------------------------------------------------------------



#---------------------------------------------------------------------
#
# The following rules map all the paragraph formats of as "Default".
# To use any of the paragraph rules defined in the WML paragraph
# library files,
#
#       include/headings.wml
#       include/lists.wml
#       include/normals.wml
#
# replace "Default" with the name of the paragraph rule to be
# used, and copy the paragraph rule into this file. If the paragraph
# rule chosen is not of TYPE Normal, then the TYPE below must be
# changed accordingly.
#-----------------------------------------------------------------------
# WebMaker, a FrameMaker to WWW converter
# 
# Copyright (C) 1994, CERN Geneva
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
#
# Contains definition of:
#
#     Node triggering heading rules (To used any of these rules EITHER
#     'nodes-012.html' OR 'nodes-012TI.html' must be included):
#
#          PARAGRAPH      L1H1HR-Node1
#          PARAGRAPH      L1H1-Node1
#          PARAGRAPH      L2H1HR-Node2
#          PARAGRAPH      L2H1-Node2
#          PARAGRAPH      L2H2-Node2
#          PARAGRAPH      L3H1HR-Node2
#          PARAGRAPH      L3H1-Node2
#          PARAGRAPH      L3H2-Node2
#          PARAGRAPH      L3H3-Node2
#
#     Heading rules:
#
#          PARAGRAPH      L1H1
#          PARAGRAPH      L1H1HR
#          PARAGRAPH      L2H1
#          PARAGRAPH      L2H1HR
#          PARAGRAPH      L2H2
#          PARAGRAPH      L2H2HR
#          PARAGRAPH      L3H1
#          PARAGRAPH      L3H1HR
#          PARAGRAPH      L3H2
#          PARAGRAPH      L3H2HR
#          PARAGRAPH      L3H3
#          PARAGRAPH      L3H3HR
#          PARAGRAPH      L4H1
#          PARAGRAPH      L4H1HR
#          PARAGRAPH      L4H2
#          PARAGRAPH      L4H2HR
#          PARAGRAPH      L4H3
#          PARAGRAPH      L4H3HR
#          PARAGRAPH      L4H4
#          PARAGRAPH      L4H4HR


#---------------------------------------------------------------------
#
# Node triggering headings. May be used with both the node packages
# 'nodes-012.wml' and 'nodes-012TI.wml'.
#
PARAGRAPH "L1H1HR-Node1" TYPE Heading
{
  LEVEL 1
  NEWNODE LevelOne
  ACTIONS
  {
    write(*,heading(1,concatenate(number()," ",text())));
    write(*,hrule());
  }
}

PARAGRAPH "L1H1-Node1" TYPE Heading
{
  LEVEL 1
  NEWNODE LevelOne
  ACTIONS
  {
    write(*,heading(1,concatenate(number()," ",text())));
  }
}

PARAGRAPH "L2H1HR-Node2" TYPE Heading
{
  LEVEL 2
  NEWNODE LevelTwo
  ACTIONS
  {
    write(*,heading(1,concatenate(number()," ",text())));
    write(*,hrule());
  }
}

PARAGRAPH "L2H1-Node2" TYPE Heading
{
  LEVEL 2
  NEWNODE LevelTwo
  ACTIONS
  {
    write(*,heading(1,concatenate(number()," ",text())));
  }
}

PARAGRAPH "L2H2-Node2" TYPE Heading
{
  LEVEL 2
  NEWNODE LevelTwo
  ACTIONS
  {
    write(*,heading(2,concatenate(number()," ",text())));
  }
}

PARAGRAPH "L3H1HR-Node2" TYPE Heading
{
  LEVEL 3
  NEWNODE LevelTwo
  ACTIONS
  {
    write(*,heading(1,concatenate(number()," ",text())));
    write(*,hrule());
  }
}

PARAGRAPH "L3H1-Node2" TYPE Heading
{
  LEVEL 3
  NEWNODE LevelTwo
  ACTIONS
  {
    write(*,heading(1,concatenate(number()," ",text())));
  }
}

PARAGRAPH "L3H2-Node2" TYPE Heading
{
  LEVEL 3
  NEWNODE LevelTwo
  ACTIONS
  {
    write(*,heading(2,concatenate(number()," ",text())));
  }
}

PARAGRAPH "L3H3-Node2" TYPE Heading
{
  LEVEL 3
  NEWNODE LevelTwo
  ACTIONS
  {
    write(*,heading(3,concatenate(number()," ",text())));
  }
}


#---------------------------------------------------------------------
#
# Headings of Level 1 that do not trigger a node 
#
PARAGRAPH "L1H1" TYPE Heading
{
  LEVEL 1
  ACTIONS
  {
    write(*,heading(1,concatenate(number()," ",text())));
  }
}

PARAGRAPH "L1H1HR" TYPE Heading
{
  LEVEL 1
  ACTIONS
  {
    write(*,heading(1,concatenate(number()," ",text())));
    write(*,hrule());
  }
}


#---------------------------------------------------------------------
#
# Headings of Level 2 that do not trigger a node
#
PARAGRAPH "L2H1" TYPE Heading
{
  LEVEL 2
  ACTIONS
  {
    write(*,heading(1,concatenate(number()," ",text())));
  }
}

PARAGRAPH "L2H1HR" TYPE Heading
{
  LEVEL 2  ACTIONS
  {
    write(*,heading(1,concatenate(number()," ",text())));
    write(*,hrule());
  }
}

PARAGRAPH "L2H2" TYPE Heading
{
  LEVEL 2
  ACTIONS
  {
    write(*,heading(2,concatenate(number()," ",text())));
  }
}

PARAGRAPH "L2H2HR" TYPE Heading
{
  LEVEL 2
  ACTIONS
  {
    write(*,heading(2,concatenate(number()," ",text())));
    write(*,hrule());
  }
}

#---------------------------------------------------------------------
#
# Headings of Level 3 that do not trigger a node
#
PARAGRAPH "L3H1" TYPE Heading
{
  LEVEL 3
  ACTIONS
  {
    write(*,heading(1,concatenate(number()," ",text())));
  }
}

PARAGRAPH "L3H1HR" TYPE Heading
{
  LEVEL 3  ACTIONS
  {
    write(*,heading(1,concatenate(number()," ",text())));
    write(*,hrule());
  }
}

PARAGRAPH "L3H2" TYPE Heading
{
  LEVEL 3
  ACTIONS
  {
    write(*,heading(2,concatenate(number()," ",text())));
  }
}

PARAGRAPH "L3H2HR" TYPE Heading
{
  LEVEL 3  ACTIONS
  {
    write(*,heading(2,concatenate(number()," ",text())));
    write(*,hrule());
  }
}

PARAGRAPH "L3H3" TYPE Heading
{
  LEVEL 3
  ACTIONS
  {
    write(*,heading(3,concatenate(number()," ",text())));
  }
}

PARAGRAPH "L3H3HR" TYPE Heading
{
  LEVEL 3  ACTIONS
  {
    write(*,heading(3,concatenate(number()," ",text())));
    write(*,hrule());
  }
}


#---------------------------------------------------------------------
#
# Headings of Level 4 that do not trigger a node
#
PARAGRAPH "L4H1" TYPE Heading
{
  LEVEL 4
  ACTIONS
  {
    write(*,heading(1,concatenate(number()," ",text())));
  }
}

PARAGRAPH "L4H1HR" TYPE Heading
{
  LEVEL 4  ACTIONS
  {
    write(*,heading(1,concatenate(number()," ",text())));
    write(*,hrule());
  }
}

PARAGRAPH "L4H2" TYPE Heading
{
  LEVEL 4
  ACTIONS
  {
    write(*,heading(2,concatenate(number()," ",text())));
  }
}

PARAGRAPH "L4H2HR" TYPE Heading
{
  LEVEL 4  ACTIONS
  {
    write(*,heading(2,concatenate(number()," ",text())));
    write(*,hrule());
  }
}

PARAGRAPH "L4H3" TYPE Heading
{
  LEVEL 4
  ACTIONS
  {
    write(*,heading(3,concatenate(number()," ",text())));
  }
}

PARAGRAPH "L4H3HR" TYPE Heading
{
  LEVEL 4  ACTIONS
  {
    write(*,heading(3,concatenate(number()," ",text())));
    write(*,hrule());
  }
}

PARAGRAPH "L4H4" TYPE Heading
{
  LEVEL 4
  ACTIONS
  {
    write(*,heading(4,concatenate(number()," ",text())));
  }
}

PARAGRAPH "L4H4HR" TYPE Heading
{
  LEVEL 4  ACTIONS
  {
    write(*,heading(4,concatenate(number()," ",text())));
    write(*,hrule());
  }
}

#-----------------------------------------------------------------------
# WebMaker, a FrameMaker to WWW converter
# 
# Copyright (C) 1994, CERN Geneva
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
#
# Contains definition of:
#
#          PARAGRAPH      L1BulletItem
#          PARAGRAPH      L2BulletItem
#          PARAGRAPH      L3BulletItem
#          PARAGRAPH      L1NumberItem
#          PARAGRAPH      L2NumberItem
#          PARAGRAPH      L3NumberItem
#          PARAGRAPH      L1GlossaryItem-1
#          PARAGRAPH      L1GlossaryItem-2
#          PARAGRAPH      L1GlossaryItem-3
#          PARAGRAPH      L1GlossaryItem-4
#          PARAGRAPH      L1GlossaryItem-5
#          PARAGRAPH      L1PlainItem
#          PARAGRAPH      L2PlainItem
#          PARAGRAPH      L3PlainItem


#---------------------------------------------------------------------
#
# Bulleted lists.

PARAGRAPH "L1BulletItem" TYPE List
{
  LEVEL 1
  KIND Bullet
  ACTIONS
  {
    write(*,listitem(paragraph(text())));
  }
}

PARAGRAPH "L2BulletItem" TYPE List
{
  LEVEL 2
  KIND Bullet
  ACTIONS
  {
    write(*,listitem(paragraph(text())));
  }
}

PARAGRAPH "L3BulletItem" TYPE List
{
  LEVEL 3
  KIND Bullet
  ACTIONS
  {
    write(*,listitem(paragraph(text())));
  }
}


#---------------------------------------------------------------------
#
# Numbered lists.

PARAGRAPH "L1NumberItem" TYPE List
{
  LEVEL 1
  KIND Number
  ACTIONS
  {
    write(*,listitem(paragraph(text())));
  }
}

PARAGRAPH "L2NumberItem" TYPE List
{
  LEVEL 2
  KIND Number
  ACTIONS
  {
    write(*,listitem(paragraph(text())));
  }
}

PARAGRAPH "L3NumberItem" TYPE List
{
  LEVEL 3
  KIND Number
  ACTIONS
  {
    write(*,listitem(paragraph(text())));
  }
}


#---------------------------------------------------------------------
#
# Glossary lists.

PARAGRAPH "L1GlossaryItem-1" TYPE List
{
  LEVEL 1
  KIND Glossary
  ACTIONS
  {
     write(*,concatenate(
                 glossterm(text(current,1,1)),
                 glossdescription(paragraph(text(current,2,*)))));
  }
}

PARAGRAPH "L1GlossaryItem-2" TYPE List
{
  LEVEL 1
  KIND Glossary
  ACTIONS
  {
     write(*,concatenate(
                 glossterm(bold(text(current,1,1))),
                 glossdescription(paragraph(text(current,2,*)))));
  }
}

PARAGRAPH "L1GlossaryItem-3" TYPE List
{
  LEVEL 1
  KIND Glossary
  ACTIONS
  {
     write(*,concatenate(
                 glossterm(text(current,1,2)),
                 glossdescription(paragraph(text(current,3,*)))));
  }
}

PARAGRAPH "L1GlossaryItem-4" TYPE List
{
  LEVEL 1
  KIND Glossary
  ACTIONS
  {
     write(*,concatenate(
                 glossterm(bold(text(current,1,2))),
                 glossdescription(paragraph(text(current,3,*)))));
  }
}

PARAGRAPH "L1GlossaryItem-5" TYPE List
{
  LEVEL 1
  KIND Glossary
  ACTIONS
  {
     write(*,concatenate(
                 glossterm(bold(number())),
                 glossdescription(paragraph(text()))));
  }
}


#---------------------------------------------------------------------
#
# Plain lists (A simulation of plain lists with glossary lists).

PARAGRAPH "L1PlainItem" TYPE List
{
  LEVEL 1
  KIND Glossary
  ACTIONS
  {
     write(*,concatenate(glossterm(""),
             glossdescription(paragraph(text()))));
  }
}

PARAGRAPH "L2PlainItem" TYPE List
{
  LEVEL 2
  KIND Glossary
  ACTIONS
  {
     write(*,concatenate(glossterm(""),
             glossdescription(paragraph(text()))));
  }
}

PARAGRAPH "L3PlainItem" TYPE List
{
  LEVEL 3
  KIND Glossary
  ACTIONS
  {
     write(*,concatenate(glossterm(""),
             glossdescription(paragraph(text()))));
  }
}

#---------------------------------------------------------------------
#---------------------------------------------------------------------

PARAGRAPH "Default" TYPE Normal
{
  ACTIONS
  {
    write(*,paragraph(concatenate(number()," ",text()))); 
  }
}

# Paragraph formats used AND contained in the paragraph catalog(s).

PARAGRAPH "Title" TYPE Normal { USES "FMDocumentTitle" } 
PARAGRAPH "1Heading" TYPE Heading { USES "L1H1HR-Node1" } 
PARAGRAPH "2Heading" TYPE Heading { USES "L2H1-Node2" } 
PARAGRAPH "3Heading" TYPE Heading { USES "L3H3" } 

PARAGRAPH "AbstractHead" TYPE Normal
{
  ACTIONS { write(*,heading(2,text())); }
}

PARAGRAPH "1HeadingTOC" TYPE Normal { USES "Ignore" } 
PARAGRAPH "3HeadingTOC" TYPE Normal { USES "Ignore" } 

PARAGRAPH "Bullet" TYPE List { USES "L1BulletItem" } 
PARAGRAPH "CBullet" TYPE List { USES "L1PlainItem" } 

PARAGRAPH "Author" TYPE Normal
{
  ACTIONS { write(*,heading(3,text())); }
}
PARAGRAPH "Reference" TYPE Normal { USES "Default" } 
PARAGRAPH "Figure" TYPE Normal { USES "Default" } 
PARAGRAPH "Extract" TYPE Normal { USES "Default" } 
PARAGRAPH "Abstract" TYPE Normal { USES "Default" } 
PARAGRAPH "FirstBody" TYPE Normal { USES "Default" } 
PARAGRAPH "Body" TYPE Normal { USES "Default" } 
PARAGRAPH "Notice" TYPE Normal { USES "Default" } 
PARAGRAPH "Footnote" TYPE Normal { USES "Default" } 

# Paragraph formats NOT used but contained in the paragraph catalog(s).

PARAGRAPH "FigureTitleTOC" TYPE Normal { USES "Default" } 
PARAGRAPH "CellHeading" TYPE Normal { USES "Default" } 
PARAGRAPH "Purpose" TYPE Normal { USES "Default" } 
PARAGRAPH "Footer" TYPE Normal { USES "Default" } 
PARAGRAPH "quote" TYPE Normal { USES "Default" } 
PARAGRAPH "MajorTOC" TYPE Normal { USES "Default" } 
PARAGRAPH "Equation" TYPE Normal { USES "Default" } 
PARAGRAPH "Body1" TYPE Normal { USES "Default" } 
PARAGRAPH "Section" TYPE Normal { USES "Default" } 
PARAGRAPH "FigureTOC" TYPE Normal { USES "Default" } 
PARAGRAPH "Ack" TYPE Normal { USES "Default" } 
PARAGRAPH "Step" TYPE Normal { USES "Default" } 
PARAGRAPH "Topic" TYPE Normal { USES "Default" } 
PARAGRAPH "subnumber" TYPE Normal { USES "Default" } 
PARAGRAPH "AppTitleTOC" TYPE Normal { USES "Default" } 
PARAGRAPH "Major" TYPE Normal { USES "Default" } 
PARAGRAPH "FigureTitle" TYPE Normal { USES "Default" } 
PARAGRAPH "CStep" TYPE Normal { USES "Default" } 
PARAGRAPH "SectionTOC" TYPE Normal { USES "Default" } 
PARAGRAPH "nomenclature" TYPE Normal { USES "Default" } 
PARAGRAPH "Tnum" TYPE Normal { USES "Default" } 
PARAGRAPH "Minor" TYPE Normal { USES "Default" } 
PARAGRAPH "TableTitleTOC" TYPE Normal { USES "Default" } 
PARAGRAPH "MinorTOC" TYPE Normal { USES "Default" } 
PARAGRAPH "computer" TYPE Normal { USES "Default" } 
PARAGRAPH "singleline" TYPE Normal { USES "Default" } 
PARAGRAPH "subnumber1" TYPE Normal { USES "Default" } 
PARAGRAPH "bullet" TYPE Normal { USES "Default" } 
PARAGRAPH "number" TYPE Normal { USES "Default" } 
PARAGRAPH "TableFootnote" TYPE Normal { USES "Default" } 
PARAGRAPH "subindent" TYPE Normal { USES "Default" } 
PARAGRAPH "Indent" TYPE Normal { USES "Default" } 
PARAGRAPH "TableTitle" TYPE Normal { USES "Default" } 
PARAGRAPH "CellBody" TYPE Normal { USES "Default" } 
PARAGRAPH "1Step" TYPE Normal { USES "Default" } 
PARAGRAPH "Tdist" TYPE Normal { USES "Default" } 
PARAGRAPH "number1" TYPE Normal { USES "Default" } 
PARAGRAPH "subbullet" TYPE Normal { USES "Default" } 

# Paragraph formats used but NOT contained in the paragraph catalog(s).

PARAGRAPH "Special Body" TYPE Normal { USES "Ignore" } 


#---------------------------------------------------------------------
#
# The following rules map all character format tags as "Emphasise".
# The complete list of what a character format may be mapped to is:
#
#      Bold        Cite       Code        Definition
#      Emphasise   Italic     Keyboard    Sample
#      Strong      Teletype   Underline   Variable

# Character formats used AND contained in the character catalog(s).

CHARACTER { TAG "Run-In Heading" MAP Bold } 
CHARACTER { TAG "Superscript" MAP Emphasise } 
CHARACTER { TAG "Emphasis" MAP Emphasise } 
CHARACTER { TAG "UNIX" MAP Emphasise } 
CHARACTER { TAG "computer" MAP Code } 

# Character formats NOT used but contained in the character catalog(s).

CHARACTER { TAG "Equation Number" MAP Emphasise } 
CHARACTER { TAG "Step Number" MAP Emphasise } 
CHARACTER { TAG "Bullet Symbol" MAP Emphasise } 
CHARACTER { TAG "Callout" MAP Emphasise } 
CHARACTER { TAG "Italic" MAP Emphasise } 
CHARACTER { TAG "Subscript" MAP Emphasise } 
CHARACTER { TAG "EquationVariables" MAP Emphasise } 
CHARACTER { TAG "Bold" MAP Emphasise } 
CHARACTER { TAG "First Letter" MAP Emphasise } 

# Character formats used but NOT contained in the character catalog(s).

CHARACTER { TAG "Code Bold" MAP Code } 
CHARACTER { TAG "Codename" MAP Emphasise } 


#---------------------------------------------------------------------
#
# The default values of the available options for the conversion
# of graphics may be edited here.

GRAPHIC DEFAULT
{
  REALSIZE   120  # Percentage scaling of output size relative to original.
  REALFORMAT GIF  # Output format may be GIF, XBM, XWD, RS, PBM, PS, PICT. 
  MARGIN     0    # Percentage margin size relative to cropped output size.
  MARGINPIX  0    # Margin size in pixels (overrides MARGIN).
  BORDER     0    # Border thickness in pixels. 
  ICON       NO   # If YES generate an icon of the image.
  ICONSIZE   25   # Percentage icon size relative to original.
  ICONFORMAT GIF  # Output icon format may be GIF or XBM.
  ROTATION   NIL  # May be LEFT or RIGHT, to rotate 1/4 revolution.
}


# End
